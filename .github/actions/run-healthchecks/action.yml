name: 'Run Health Checks'
description: 'Run Playwright health checks against specified base URL'

inputs:
  base_url:
    description: 'Base URL to run health checks against'
    required: true
  environment_name:
    description: 'Environment name for artifact naming'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Wake up site
      shell: bash
      run: |
        curl -s --max-time 30 -o /dev/null "${{ inputs.base_url }}" &

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'yarn'

    - name: Install dependencies
      shell: bash
      run: yarn install --frozen-lockfile

    - name: Get Playwright version
      id: playwright-version
      shell: bash
      run: echo "version=$(node -p "require('./package.json').devDependencies['@playwright/test']")" >> $GITHUB_OUTPUT

    - name: Run health checks in Docker
      shell: bash
      env:
        TEST_BASE_URL: ${{ inputs.base_url }}
      run: |
        # Use the official Playwright image with all dependencies pre-installed
        docker run --rm \
          -v ${{ github.workspace }}:/work \
          -w /work \
          -e TEST_BASE_URL="${TEST_BASE_URL}" \
          -e CI=true \
          -e PW_TEST_HTML_REPORT_OPEN=never \
          --network host \
          mcr.microsoft.com/playwright:v${{ steps.playwright-version.outputs.version }} \
          bash -c "yarn playwright test --reporter=list --reporter=html"

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-results-${{ inputs.environment_name }}
        path: |
          playwright-report/
          test-results/
        retention-days: 30
