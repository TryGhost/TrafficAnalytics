name: Build & Deploy

on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: write

env:
  GCP_PROJECT_ID: ghost-traffic-analytics
  GCP_WORKFLOW_IDENTITY_PROVIDER: projects/460065119042/locations/global/workloadIdentityPools/github-oidc-analytics/providers/github-provider-analytics
  DOCKER_IMAGE: europe-docker.pkg.dev/ghost-traffic-analytics/traffic-analytics/traffic-analytics

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.traffic-analytics-docker-metadata.outputs.version }}
    steps:
      - uses: actions/checkout@v4

      - name: Extract node version
        id: extract-node-version
        uses: ./.github/actions/extract-node-version

      - name: Build Docker Image
        id: docker-build
        uses: ./.github/actions/docker-build
        with:
          node-version: ${{ fromJSON(steps.extract-node-version.outputs.node-version) }}

      - name: Lint & Test
        uses: ./.github/actions/lint-and-test
        with:
          docker-image: ${{ steps.docker-build.outputs.image-name }}

      - name: "Auth with Google Cloud"
        id: gcp-auth
        uses: google-github-actions/auth@v2
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}
          token_format: access_token
          workload_identity_provider: ${{ env.GCP_WORKFLOW_IDENTITY_PROVIDER }}
          service_account: gh-artifact-manager@ghost-traffic-analytics.iam.gserviceaccount.com
      - name: "Login to GCP Artifact Registry"
        uses: docker/login-action@v3
        with:
          registry: europe-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.gcp-auth.outputs.access_token }}

      - name: Generate Docker Tags
        id: traffic-analytics-docker-metadata
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.DOCKER_IMAGE }}
          tags: |
            ${{ github.ref == 'refs/heads/main' && 'type=edge,branch=main' || '' }}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha,priority=1100
            type=sha,format=long

      - name: Retag & Push Docker Image
        run: |
          for tag in $(echo "${{ steps.traffic-analytics-docker-metadata.outputs.tags }}"); do
            echo "Tagging: $tag"
            docker tag ${{ steps.docker-build.outputs.image-name }} $tag
          done

          for tag in $(echo "${{ steps.traffic-analytics-docker-metadata.outputs.tags }}"); do
            echo "Pushing: $tag"
            docker push $tag
          done

  check-version-change:
    name: Check Version Change
    runs-on: ubuntu-latest
    outputs:
      version-changed: ${{ steps.check-version.outputs.changed }}
      current-version: ${{ steps.check-version.outputs.version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Check if version changed
        id: check-version
        run: |
          # Get current version from package.json
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          
          # Get previous commit's version (if it exists)
          if git show HEAD~1:package.json > /dev/null 2>&1; then
            PREVIOUS_VERSION=$(git show HEAD~1:package.json | node -p "JSON.parse(require('fs').readFileSync('/dev/stdin', 'utf8')).version")
            echo "Previous version: $PREVIOUS_VERSION"
            echo "Current version: $CURRENT_VERSION"
            
            if [ "$CURRENT_VERSION" != "$PREVIOUS_VERSION" ]; then
              echo "Version changed from $PREVIOUS_VERSION to $CURRENT_VERSION"
              echo "changed=true" >> $GITHUB_OUTPUT
            else
              echo "Version unchanged: $CURRENT_VERSION"
              echo "changed=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "No previous commit found, assuming version change"
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

  create-release-tag:
    name: Create Release Tag
    runs-on: ubuntu-latest
    needs: check-version-change
    if: needs.check-version-change.outputs.version-changed == 'true'
    steps:
      - uses: actions/checkout@v4

      - name: "Create Release Tag"
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag "v${{ needs.check-version-change.outputs.current-version }}"
          git push origin "v${{ needs.check-version-change.outputs.current-version }}"

      - name: Send slack notification for new version release
        uses: slackapi/slack-github-action@v2.1.0
        if: success()
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          webhook-type: incoming-webhook
          payload: |
            text: "New Traffic Analytics Version Released: v${{ needs.check-version-change.outputs.current-version }}"
            blocks:
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: ":tada: *New Traffic Analytics Version Released*"
              - type: "section"
                fields:
                  - type: "mrkdwn"
                    text: "*Version:*\n:label: v${{ needs.check-version-change.outputs.current-version }}"
                  - type: "mrkdwn"
                    text: "*Status:*\n:large_green_circle: Released"
                  - type: "mrkdwn"
                    text: "*Tag:*\n:bookmark: <${{ github.server_url }}/${{ github.repository }}/releases/tag/v${{ needs.check-version-change.outputs.current-version }}|v${{ needs.check-version-change.outputs.current-version }}>"
                  - type: "mrkdwn"
                    text: "*Workflow:*\n:gear: <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Run>"
            attachments:
              - color: "good"
                fallback: "New Traffic Analytics Version Released: v${{ needs.check-version-change.outputs.current-version }}"

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: [build, check-version-change]
    strategy:
      matrix:
        region: [europe-west4]
        include:
          - region: europe-west4
            region_name: netherlands
    steps:
      - uses: actions/checkout@v4

      - name: "Deploy to Staging (${{ matrix.region }})"
        id: deploy-staging
        uses: "./.github/actions/deploy-gcp-cloud-run"
        with:
          environment: staging
          region: ${{ matrix.region }}
          service: stg-${{ matrix.region_name }}-traffic-analytics
          image: ${{ env.DOCKER_IMAGE }}:${{ needs.build.outputs.version }}

      - name: Send slack notification for staging deployment
        uses: slackapi/slack-github-action@v2.1.0
        if: always()
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          webhook-type: incoming-webhook
          payload: |
            text: "Traffic Analytics Staging Deployment: ${{ job.status }} (${{ matrix.region_name }})"
            blocks:
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: "${{ job.status == 'success' && ':white_check_mark: *Traffic Analytics Staging Deployment*' || ':x: *Traffic Analytics Staging Deployment*' }}"
              - type: "section"
                fields:
                  - type: "mrkdwn"
                    text: "*Status:*\n${{ job.status == 'success' && ':large_green_circle: Success' || ':red_circle: Failed' }}"
                  - type: "mrkdwn"
                    text: "*Region:*\n:earth_americas: ${{ matrix.region_name }}"
                  - type: "mrkdwn"
                    text: "*Image:*\n:whale: `${{ env.DOCKER_IMAGE }}:${{ needs.build.outputs.version }}`"
                  - type: "mrkdwn"
                    text: "*Workflow:*\n:gear: <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Run>"
            attachments:
              - color: "${{ job.status == 'success' && 'good' || 'danger' }}"
                fallback: "Traffic Analytics Staging Deployment: ${{ job.status }}"

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [build, check-version-change]
    if: needs.check-version-change.outputs.version-changed == 'true'
    strategy:
      matrix:
        region: [europe-west4]
        include:
          - region: europe-west4
            region_name: netherlands
    steps:
      - uses: actions/checkout@v4

      - name: "Deploy to Production (${{ matrix.region }})"
        id: deploy-production
        uses: "./.github/actions/deploy-gcp-cloud-run"
        with:
          environment: production
          region: ${{ matrix.region }}
          service: prd-${{ matrix.region_name }}-traffic-analytics
          image: ${{ env.DOCKER_IMAGE }}:${{ needs.build.outputs.version }}

      - name: Send slack notification for production deployment
        uses: slackapi/slack-github-action@v2.1.0
        if: always()
        with:
          webhook: ${{ secrets.SLACK_WEBHOOK_URL }}
          webhook-type: incoming-webhook
          payload: |
            text: "Traffic Analytics Production Deployment: ${{ job.status }} (${{ matrix.region_name }})"
            blocks:
              - type: "section"
                text:
                  type: "mrkdwn"
                  text: "${{ job.status == 'success' && ':rocket: *Traffic Analytics Production Deployment*' || ':x: *Traffic Analytics Production Deployment*' }}"
              - type: "section"
                fields:
                  - type: "mrkdwn"
                    text: "*Status:*\n${{ job.status == 'success' && ':large_green_circle: Success' || ':red_circle: Failed' }}"
                  - type: "mrkdwn"
                    text: "*Region:*\n:earth_americas: ${{ matrix.region_name }}"
                  - type: "mrkdwn"
                    text: "*Image:*\n:whale: `${{ env.DOCKER_IMAGE }}:${{ needs.build.outputs.version }}`"
                  - type: "mrkdwn"
                    text: "*Workflow:*\n:gear: <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Run>"
            attachments:
              - color: "${{ job.status == 'success' && 'good' || 'danger' }}"
                fallback: "Traffic Analytics Production Deployment: ${{ job.status }}"
